(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{849:function(t,e,i){"use strict";i.r(e);var a=i(40),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git-常用命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-常用命令"}},[t._v("#")]),t._v(" Git 常用命令")]),t._v(" "),i("ol",[i("li",[t._v('配置自己的用户名和邮箱：\ngit config --global user.name "username"\ngit config --global user.email "username@xiaoheiban.com"')])]),t._v(" "),i("p",[t._v('// 如果某个项目你需要单独配置 user.name, 可以进入到相应的目录\ngit config --local user.name "username"\ngit config --local user.email "username@xiaoheiban.com"')]),t._v(" "),i("ol",{attrs:{start:"2"}},[i("li",[i("p",[t._v("删除某项配置\ngit config --unset alias.co")])]),t._v(" "),i("li",[i("p",[t._v("分支查看：\n查看本地分支：（gb）git br\n查看全部分支: （gba）git br -av")])]),t._v(" "),i("li",[i("p",[t._v("创建分支两种方式，如从 master 上创建 develop 分支\n// 创建新的分支，但是不会立即切到新的分支上面\ngb develop master\n// 创建新的分支，并且立即切到新的分支上面\ngcp develop master")])]),t._v(" "),i("li",[i("p",[t._v("切换分支\n// master\ngcm\n// develop\ngcd\n// feature/xx\ngco feature/xx")])]),t._v(" "),i("li",[i("p",[t._v("合并分支\n将 develop 合并到 master：\n// merge\n// rebase\ngrbm (git rebase master 基于 master 做 rebase)\n// 解决完冲突后 ga . ,不要做 commit\ngrbc (git rebase --continue)\n// 如果不需要当前的 log\ngrbs （git rebase --skip）\n// 如果需要终止当前 rebase\ngrba （git rebase --abort）")])])]),t._v(" "),i("p",[t._v("7.标记")]),t._v(" "),i("p",[t._v("a. 打标记：git tag v0.1.0\nb. 查看标记：git tag -l\nc. 删除标记：git tag -d v0.1.0\nd. 删除远程 tag：git push origin :refs/tags/v0.9.3\ne. 推送 tag：git push --tags")]),t._v(" "),i("ol",{attrs:{start:"8"}},[i("li",[i("p",[t._v("误删除的文件一次性恢复，两种方式，首先切到 bash 命令模式下或 linux 下直接用：\ngit ls-fies -d | xargs git co --\ngit ls-files -d | xargs -i git co {}")])]),t._v(" "),i("li",[i("p",[t._v("删除分支")])])]),t._v(" "),i("p",[t._v("删除本地分支：gbd feature_test\n删除远程分支：gp origin :feature_test\n清除远程在本地存在，而远程已经删除的分支：git remote prune origin")]),t._v(" "),i("ol",{attrs:{start:"10"}},[i("li",[t._v("恢复文件")])]),t._v(" "),i("p",[t._v("gco -- file\n命令中的“--”很重要，没有“--”，就变成了“创建一个新分支”的命令")]),t._v(" "),i("ol",{attrs:{start:"11"}},[i("li",[t._v("查看提交 log")])]),t._v(" "),i("p",[t._v("glg|glog filename\n可以看到 fileName 相关的 commit 记录")]),t._v(" "),i("p",[t._v("glgp\n可以显示每次提交的 diff")]),t._v(" "),i("p",[t._v("只看某次提交中的某个文件变化，可以直接加上 fileName")]),t._v(" "),i("p",[t._v("git show c5e69804bbd9725b5dece57f8cbece4a96b9f80b filename")]),t._v(" "),i("ol",{attrs:{start:"12"}},[i("li",[i("p",[t._v("git stash 命令\ngit stash\ngit stash pop\ngit stash list\ngit stash clear\ngit stash apply\ngit stash apply stash@{1}")])]),t._v(" "),i("li",[i("p",[t._v("提交远程分支")])])]),t._v(" "),i("p",[t._v("首次提交分支，需要加-u 与远程分支关联： git push -u origin develop /(gsup)\n关联过只用：git push /(gp)")]),t._v(" "),i("p",[t._v("14.拉分支")]),t._v(" "),i("p",[t._v("更新当前分支：git pull\n在 master 上分支上更新 devlop 分支：git pull origin develop:develop\n删除远程已被删除的分支： git remote prune origin")]),t._v(" "),i("ol",{attrs:{start:"15"}},[i("li",[i("p",[t._v("查看远程地址\ngit remote -v\ngit remote show origin\n// 修改远程关联分支\ngit remote set-url origin newurl")])]),t._v(" "),i("li",[i("p",[t._v("清除修改")])])]),t._v(" "),i("p",[t._v("清除本地未提交的修改：（grhh）git reset --hard\n清除本地已提交但是未推送的修改：git reset --hard origin/master")]),t._v(" "),i("p",[i("a",{attrs:{href:"https://sourabhbajaj.com/mac-setup/",target:"_blank",rel:"noopener noreferrer"}},[t._v("大神的基本配置"),i("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);